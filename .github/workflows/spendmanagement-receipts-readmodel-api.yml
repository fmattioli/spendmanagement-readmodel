name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore src/Receipts.ReadModel.API/Receipts.ReadModel.API.csproj
    - name: Build
      run: dotnet build --no-restore --configuration Release src/Receipts.ReadModel.API/Receipts.ReadModel.API.csproj

  unit-tests:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies for unit tests
        run: dotnet restore tests/SpendManagament.ReadModel.UnitTests/SpendManagement.ReadModel.UnitTests.csproj
      - name: Build project
        run: dotnet build --no-restore --configuration Release tests/SpendManagament.ReadModel.UnitTests/SpendManagement.ReadModel.UnitTests.csproj
      - name: Run unit tests
        run: dotnet test --verbosity normal --logger trx --results-directory TestResults tests/SpendManagament.ReadModel.UnitTests/SpendManagement.ReadModel.UnitTests.csproj
      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./TestResults

  publish-docker-image:
    runs-on: ubuntu-latest
    needs: unit-tests
  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t fmattioli/spendmanagement-readmodel-api:1.0.0.0 .
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Push Docker image to Docker Hub
        run: docker push fmattioli/spendmanagement-readmodel-api:1.0.0.0
